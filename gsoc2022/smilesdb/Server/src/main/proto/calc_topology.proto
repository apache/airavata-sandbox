syntax = "proto3";
package com.smiles;
option java_multiple_files = true;

message CalcTopology{

  //QcSchema-Topology
  //  string[] symbols; //(nat, ) atom symbols in title case.
  repeated string symbols = 1;
  //  double [] geometry; // (3 * nat, ) vector of XYZ coordinates [a0] of the atoms.
  repeated string geometry = 2;
  double mol_charge = 3; //The overall charge of the molecule.
  int64 mol_multiplicity = 4; //The overall multiplicity of the molecule.
  string name = 5; //The name of the molecule.
  string comment = 6; //Any additional comment one would attach to the molecule.
  //  int[] mass_numbers; //(nat, ) mass numbers for atoms, if known isotope, else -1.
  repeated int64 mass_numbers = 7 [packed = true];
  //  double[] masses; //(nat, ) atom masses [u]; canonical weights assumed if not given.
  repeated double masses = 8 [packed = true];
  //  double[] atomic_numbers; //(nat, ) atomic numbers, nuclear charge for atoms. Ghostedness should be indicated through ‘real’ field, not zeros here.
  repeated double atomic_number = 9 [packed = true];
  //  string[] atom_labels; //(nat, ) atom labels with any user tagging information.
  repeated string atom_labels = 10;
  //    atomic_numbers

}

message CalcTopologyRequest{
  string calcTopologyQuery = 1;
  CalcTopology calcTopology = 2;
}

service CalcTopologyService{
  rpc GetCalcTopology(CalcTopologyRequest) returns (CalcTopology){}
  rpc CreateCalcTopology(CalcTopologyRequest) returns (CalcTopology){}
  rpc UpdateCalcTopology(CalcTopologyRequest) returns (CalcTopology){}
  rpc DeleteCalcTopology(CalcTopologyRequest) returns (CalcTopology){}
}















