# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import molecule_pb2 as molecule__pb2


class MoleculeServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateMolecule = channel.unary_unary(
                '/molecule.MoleculeService/CreateMolecule',
                request_serializer=molecule__pb2.CreateMoleculeRequest.SerializeToString,
                response_deserializer=molecule__pb2.CreateMoleculeResponse.FromString,
                )
        self.ReadMolecule = channel.unary_unary(
                '/molecule.MoleculeService/ReadMolecule',
                request_serializer=molecule__pb2.ReadMoleculeRequest.SerializeToString,
                response_deserializer=molecule__pb2.ReadMoleculeResponse.FromString,
                )
        self.UpdateMolecule = channel.unary_unary(
                '/molecule.MoleculeService/UpdateMolecule',
                request_serializer=molecule__pb2.UpdateMoleculeRequest.SerializeToString,
                response_deserializer=molecule__pb2.UpdateMoleculeResponse.FromString,
                )
        self.DeleteMolecule = channel.unary_unary(
                '/molecule.MoleculeService/DeleteMolecule',
                request_serializer=molecule__pb2.DeleteMoleculeRequest.SerializeToString,
                response_deserializer=molecule__pb2.DeleteMoleculeResponse.FromString,
                )
        self.ListMolecule = channel.unary_stream(
                '/molecule.MoleculeService/ListMolecule',
                request_serializer=molecule__pb2.ListMoleculeRequest.SerializeToString,
                response_deserializer=molecule__pb2.ListMoleculeResponse.FromString,
                )


class MoleculeServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateMolecule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadMolecule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMolecule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMolecule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMolecule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MoleculeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateMolecule': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMolecule,
                    request_deserializer=molecule__pb2.CreateMoleculeRequest.FromString,
                    response_serializer=molecule__pb2.CreateMoleculeResponse.SerializeToString,
            ),
            'ReadMolecule': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadMolecule,
                    request_deserializer=molecule__pb2.ReadMoleculeRequest.FromString,
                    response_serializer=molecule__pb2.ReadMoleculeResponse.SerializeToString,
            ),
            'UpdateMolecule': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMolecule,
                    request_deserializer=molecule__pb2.UpdateMoleculeRequest.FromString,
                    response_serializer=molecule__pb2.UpdateMoleculeResponse.SerializeToString,
            ),
            'DeleteMolecule': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMolecule,
                    request_deserializer=molecule__pb2.DeleteMoleculeRequest.FromString,
                    response_serializer=molecule__pb2.DeleteMoleculeResponse.SerializeToString,
            ),
            'ListMolecule': grpc.unary_stream_rpc_method_handler(
                    servicer.ListMolecule,
                    request_deserializer=molecule__pb2.ListMoleculeRequest.FromString,
                    response_serializer=molecule__pb2.ListMoleculeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'molecule.MoleculeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MoleculeService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateMolecule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/molecule.MoleculeService/CreateMolecule',
            molecule__pb2.CreateMoleculeRequest.SerializeToString,
            molecule__pb2.CreateMoleculeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadMolecule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/molecule.MoleculeService/ReadMolecule',
            molecule__pb2.ReadMoleculeRequest.SerializeToString,
            molecule__pb2.ReadMoleculeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMolecule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/molecule.MoleculeService/UpdateMolecule',
            molecule__pb2.UpdateMoleculeRequest.SerializeToString,
            molecule__pb2.UpdateMoleculeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMolecule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/molecule.MoleculeService/DeleteMolecule',
            molecule__pb2.DeleteMoleculeRequest.SerializeToString,
            molecule__pb2.DeleteMoleculeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMolecule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/molecule.MoleculeService/ListMolecule',
            molecule__pb2.ListMoleculeRequest.SerializeToString,
            molecule__pb2.ListMoleculeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
