# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import calc_topology_pb2 as calc__topology__pb2


class CalcTopologyServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCalcTopology = channel.unary_unary(
                '/com.smiles.CalcTopologyService/GetCalcTopology',
                request_serializer=calc__topology__pb2.CalcTopologyRequest.SerializeToString,
                response_deserializer=calc__topology__pb2.CalcTopology.FromString,
                )
        self.CreateCalcTopology = channel.unary_unary(
                '/com.smiles.CalcTopologyService/CreateCalcTopology',
                request_serializer=calc__topology__pb2.CalcTopologyRequest.SerializeToString,
                response_deserializer=calc__topology__pb2.CalcTopology.FromString,
                )
        self.UpdateCalcTopology = channel.unary_unary(
                '/com.smiles.CalcTopologyService/UpdateCalcTopology',
                request_serializer=calc__topology__pb2.CalcTopologyRequest.SerializeToString,
                response_deserializer=calc__topology__pb2.CalcTopology.FromString,
                )
        self.DeleteCalcTopology = channel.unary_unary(
                '/com.smiles.CalcTopologyService/DeleteCalcTopology',
                request_serializer=calc__topology__pb2.CalcTopologyRequest.SerializeToString,
                response_deserializer=calc__topology__pb2.CalcTopology.FromString,
                )


class CalcTopologyServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCalcTopology(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCalcTopology(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCalcTopology(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCalcTopology(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CalcTopologyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCalcTopology': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCalcTopology,
                    request_deserializer=calc__topology__pb2.CalcTopologyRequest.FromString,
                    response_serializer=calc__topology__pb2.CalcTopology.SerializeToString,
            ),
            'CreateCalcTopology': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCalcTopology,
                    request_deserializer=calc__topology__pb2.CalcTopologyRequest.FromString,
                    response_serializer=calc__topology__pb2.CalcTopology.SerializeToString,
            ),
            'UpdateCalcTopology': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCalcTopology,
                    request_deserializer=calc__topology__pb2.CalcTopologyRequest.FromString,
                    response_serializer=calc__topology__pb2.CalcTopology.SerializeToString,
            ),
            'DeleteCalcTopology': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCalcTopology,
                    request_deserializer=calc__topology__pb2.CalcTopologyRequest.FromString,
                    response_serializer=calc__topology__pb2.CalcTopology.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.smiles.CalcTopologyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CalcTopologyService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCalcTopology(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.smiles.CalcTopologyService/GetCalcTopology',
            calc__topology__pb2.CalcTopologyRequest.SerializeToString,
            calc__topology__pb2.CalcTopology.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCalcTopology(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.smiles.CalcTopologyService/CreateCalcTopology',
            calc__topology__pb2.CalcTopologyRequest.SerializeToString,
            calc__topology__pb2.CalcTopology.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCalcTopology(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.smiles.CalcTopologyService/UpdateCalcTopology',
            calc__topology__pb2.CalcTopologyRequest.SerializeToString,
            calc__topology__pb2.CalcTopology.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCalcTopology(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.smiles.CalcTopologyService/DeleteCalcTopology',
            calc__topology__pb2.CalcTopologyRequest.SerializeToString,
            calc__topology__pb2.CalcTopology.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
